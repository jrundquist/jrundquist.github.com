/*
	Frameless			<http://framelessgrid.com/>
	by Joni Korpi 		<http://jonikorpi.com/>
	licensed under CC0	<http://creativecommons.org/publicdomain/zero/1.0/>
*/
//
// Configuration
//

@font-size: 16; 		// Your base font-size in pixels
@em: @font-size*1em;	// Shorthand for outputting ems, e.g. "12/@em"
@px: 1px;
@column: 48;	// The column-width of your grid in pixels
@gutter: 24;	// The gutter-width of your grid in pixels


//
// Column-widths in variables, in ems
//

 @1cols: ( 1 * (@column + @gutter) - @gutter) * @px; @1col: @1cols;
 @2cols: ( 2 * (@column + @gutter) - @gutter) * @px;
 @3cols: ( 3 * (@column + @gutter) - @gutter) * @px;
 @4cols: ( 4 * (@column + @gutter) - @gutter) * @px;
 @5cols: ( 5 * (@column + @gutter) - @gutter) * @px;
 @6cols: ( 6 * (@column + @gutter) - @gutter) * @px;
 @7cols: ( 7 * (@column + @gutter) - @gutter) * @px;
 @8cols: ( 8 * (@column + @gutter) - @gutter) * @px;
 @9cols: ( 9 * (@column + @gutter) - @gutter) * @px;
@10cols: (10 * (@column + @gutter) - @gutter) * @px;
@11cols: (11 * (@column + @gutter) - @gutter) * @px;
@12cols: (12 * (@column + @gutter) - @gutter) * @px;
@13cols: (13 * (@column + @gutter) - @gutter) * @px;
@14cols: (14 * (@column + @gutter) - @gutter) * @px;
@15cols: (15 * (@column + @gutter) - @gutter) * @px;
@16cols: (16 * (@column + @gutter) - @gutter) * @px;
@1_2cols: @1cols / 2;


//
// Column-widths in a function, in ems
//

.width (@cols:1) {
	width: (@cols * (@column + @gutter) - @gutter) * @px;
}
/*
	Margin, padding, and border resets
	except for form elements
*/
body, div,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre, dl, dt, dd, ol, ul, li,
fieldset, form, label, legend, th, td,
article, aside, figure, footer, header, hgroup, menu, nav, section {
	margin: 0;
	padding: 0;
	border: 0;
}
/*
	Consistency fixes
	adopted from http://necolas.github.com/normalize.css/
*/

article, aside, details, figcaption, figure, 
footer, header, hgroup, nav, section, audio, canvas, video {
	display: block;
}

html {
	height: 100%; 
	-webkit-text-size-adjust: 100%; 
	-ms-text-size-adjust: 100%;
}

body {
	min-height: 100%; font-size: 100%;
}

sub, sup {
	font-size: 75%; 
	line-height: 0; 
	position: relative; 
	vertical-align: baseline;
}

	sup {top: -0.5em;}
	sub {bottom: -0.25em;}

pre {
	white-space: pre; 
	white-space: pre-wrap; 
	word-wrap: break-word;
}

b, strong {font-weight: bold;}
abbr[title] {border-bottom: 1px dotted;}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

a img, img {
	-ms-interpolation-mode: bicubic;
	border: 0;
}

input, textarea, button, select {
	margin: 0;
	font-size: 100%;
	line-height: normal;
	vertical-align: baseline;
}

	button,
	html input[type="button"], 
	input[type="reset"], 
	input[type="submit"] {
	    cursor: pointer;
	    -webkit-appearance: button;
	}
	
	input[type="checkbox"],
	input[type="radio"] {
		-webkit-box-sizing: border-box;
		   -moz-box-sizing: border-box;
			 -o-box-sizing: border-box;
			-ms-box-sizing: border-box;
				box-sizing: border-box;
	}
	
	textarea {overflow: auto;}




	::selection {
		background: @orange;
		color: white;
	}
	::-moz-selection {
		background: @orange;
		color: white;
	}

	img::selection {
		background: transparent;
	}
	img::-moz-selection {
		background: transparent;
	}

	body {
		-webkit-tap-highlight-color: @orange;
	}


	.small() {
	  /* 13px / 18px */

	  font-size: 0.8125em;
	  line-height: 1.3846153846153846em;
	}
	.normal() {
	  /* 16px / 24px */

	  font-size: 1em;
	  line-height: 1.5em;
	  /* 24 */

	}
	.large() {
	  /* 26 / 36px */

	  font-size: 1.625em;
	  line-height: 1.3846153846153846em;
	}
	.huge() {
	  /* 42px / 48px */

	  font-size: 2.625em;
	  line-height: 1.1428571428571428em;
	}
	.massive()  {
	  /* 68px / 72px */

	  font-size: 4.25em;
	  line-height: 1.0588235294117647em;
	}
	.gigantic() {
	  /* 110px / 120px */

	  font-size: 6.875em;
	  line-height: 1.0909090909090908em;
	}